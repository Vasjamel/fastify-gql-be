// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  password  String
}

model Pupil {
  id                  String                @id @default(cuid())
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  birthday            DateTime              @default(now())
  name                String?
  grade               Int?
  group               String?
  lessons             Lesson[]              @relation("PupilLessons")
  Task                Task[]
 // LessonPupilRelation LessonPupilRelation[]
}

model Lesson {
  id                  String                @id @default(cuid())
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  subject             String
  teacher             Teacher?              @relation(fields: [teacherId], references: [id])
  teacherId           String
  pupils              Pupil[]               @relation("PupilLessons")
  Task                Task[]
 // LessonPupilRelation LessonPupilRelation[]
}

model Teacher {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  lessons   Lesson[]
}

model Task {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String
  lesson      Lesson   @relation(fields: [lessonId], references: [id])
  lessonId    String
  pupil       Pupil    @relation(fields: [pupilId], references: [id])
  pupilId     String
}

// model LessonPupilRelation {
//  createdAt  DateTime @default(now())
//  updatedAt  DateTime @updatedAt
//  lesson     Lesson   @relation(fields: [lessonId], references: [id])
//  lessonId   String
//  pupil      Pupil    @relation(fields: [pupilId], references: [id])
//  pupilId    String
//  assignedBy String
//
//  @@id([pupilId, lessonId])
// }
